# Generated by Django 5.1 on 2024-12-12 08:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='company',
            name='address',
            field=models.TextField(blank=True, help_text='The physical address of the company.', null=True, verbose_name='Address'),
        ),
        migrations.AddField(
            model_name='company',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='company',
            name='created_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='company',
            name='email',
            field=models.EmailField(blank=True, help_text='Contact email for the company.', max_length=254, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email'),
        ),
        migrations.AddField(
            model_name='company',
            name='fax',
            field=models.CharField(blank=True, help_text='Fax number of the company.', max_length=15, null=True, validators=[django.core.validators.RegexValidator(code='invalid_fax_number', message="Fax number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Fax Number'),
        ),
        migrations.AddField(
            model_name='company',
            name='location',
            field=models.CharField(blank=True, help_text='City or geographical location of the company.', max_length=255, null=True, verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='company',
            name='logo',
            field=models.CharField(blank=True, help_text='The logo of the company.', max_length=255, null=True, verbose_name='Company Logo'),
        ),
        migrations.AddField(
            model_name='company',
            name='modified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified by'),
        ),
        migrations.AddField(
            model_name='company',
            name='modified_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='company',
            name='name',
            field=models.CharField(help_text='The name of the company.', max_length=255, null=True, unique=True, verbose_name='Company Name'),
        ),
        migrations.AddField(
            model_name='company',
            name='phone',
            field=models.CharField(blank=True, help_text='Primary contact number of the company.', max_length=15, null=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$')], verbose_name='Phone Number'),
        ),
        migrations.AddField(
            model_name='company',
            name='postal_code',
            field=models.CharField(blank=True, help_text='The postal or ZIP code of the company.', max_length=20, null=True, validators=[django.core.validators.RegexValidator(code='invalid_postal_code', message='Postal code must contain 4 to 10 digits.', regex='^\\d{4,10}$')], verbose_name='Postal Code'),
        ),
        migrations.AlterField(
            model_name='company',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
    ]
